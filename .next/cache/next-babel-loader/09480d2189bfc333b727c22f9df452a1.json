{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/fangyongbin/Projects/ruby-web/pages/index.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useRef, useState, useEffect } from 'react';\nimport dynamic from 'next/dynamic';\nvar QuillNoSSRWrapper = dynamic(_c = function _c() {\n  return import('react-quill');\n}, {\n  ssr: false,\n  loading: function loading() {\n    return __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 6,\n        columnNumber: 18\n      }\n    }, \"Loading ...\");\n  },\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('react-quill')];\n    },\n    modules: ['react-quill']\n  }\n});\n_c2 = QuillNoSSRWrapper;\n\nvar IndexPage = function IndexPage() {\n  _s();\n\n  var _useState = useState(''),\n      value = _useState[0],\n      setValue = _useState[1];\n\n  var formats = ['header', 'font', 'size', 'bold', 'italic', 'underline', 'strike', 'blockquote', 'list', 'bullet', 'indent', 'link', 'image', 'video'];\n  var modules = {\n    toolbar: [[{\n      header: '1'\n    }, {\n      header: '2'\n    }, {\n      font: []\n    }], [{\n      size: []\n    }], ['bold', 'italic', 'underline', 'strike', 'blockquote'], [{\n      list: 'ordered'\n    }, {\n      list: 'bullet'\n    }, {\n      indent: '-1'\n    }, {\n      indent: '+1'\n    }], ['link', 'image', 'video'], ['clean']],\n    clipboard: {\n      // toggle to add extra line breaks when pasting HTML:\n      matchVisual: false\n    }\n  };\n  return __jsx(QuillNoSSRWrapper, {\n    modules: modules,\n    formats: formats,\n    theme: \"snow\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 14\n    }\n  });\n};\n\n_s(IndexPage, \"A2PXPeq8TepW328gUMM4+o8Xryo=\");\n\n_c3 = IndexPage;\nexport default IndexPage;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"QuillNoSSRWrapper$dynamic\");\n$RefreshReg$(_c2, \"QuillNoSSRWrapper\");\n$RefreshReg$(_c3, \"IndexPage\");","map":{"version":3,"sources":["/Users/fangyongbin/Projects/ruby-web/pages/index.js"],"names":["React","useRef","useState","useEffect","dynamic","QuillNoSSRWrapper","ssr","loading","IndexPage","value","setValue","formats","modules","toolbar","header","font","size","list","indent","clipboard","matchVisual"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,OAAOC,OAAP,MAAoB,cAApB;AAEA,IAAMC,iBAAiB,GAAGD,OAAO;AAAA,SAAC,OAAO,aAAP,CAAD;AAAA,GAAwB;AACvDE,EAAAA,GAAG,EAAE,KADkD;AAEvDC,EAAAA,OAAO,EAAE;AAAA,WAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAN;AAAA,GAF8C;AAAA;AAAA;AAAA,kCAAhB,aAAgB;AAAA;AAAA,cAAhB,aAAgB;AAAA;AAAA,CAAxB,CAAjC;MAAMF,iB;;AAKN,IAAMG,SAAS,GAAG,SAAZA,SAAY,GAAM;AAAA;;AAAA,kBACIN,QAAQ,CAAC,EAAD,CADZ;AAAA,MACfO,KADe;AAAA,MACRC,QADQ;;AAGtB,MAAMC,OAAO,GAAG,CAChB,QADgB,EAEhB,MAFgB,EAGhB,MAHgB,EAIhB,MAJgB,EAKhB,QALgB,EAMhB,WANgB,EAOhB,QAPgB,EAQhB,YARgB,EAShB,MATgB,EAUhB,QAVgB,EAWhB,QAXgB,EAYhB,MAZgB,EAahB,OAbgB,EAchB,OAdgB,CAAhB;AAgBF,MAAMC,OAAO,GAAG;AACdC,IAAAA,OAAO,EAAE,CACP,CAAC;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAD,EAAkB;AAAEA,MAAAA,MAAM,EAAE;AAAV,KAAlB,EAAmC;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAnC,CADO,EAEP,CAAC;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAD,CAFO,EAGP,CAAC,MAAD,EAAS,QAAT,EAAmB,WAAnB,EAAgC,QAAhC,EAA0C,YAA1C,CAHO,EAIP,CACE;AAAEC,MAAAA,IAAI,EAAE;AAAR,KADF,EAEE;AAAEA,MAAAA,IAAI,EAAE;AAAR,KAFF,EAGE;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAHF,EAIE;AAAEA,MAAAA,MAAM,EAAE;AAAV,KAJF,CAJO,EAUP,CAAC,MAAD,EAAS,OAAT,EAAkB,OAAlB,CAVO,EAWP,CAAC,OAAD,CAXO,CADK;AAcdC,IAAAA,SAAS,EAAE;AACT;AACAC,MAAAA,WAAW,EAAE;AAFJ;AAdG,GAAhB;AAmBM,SAAO,MAAC,iBAAD;AAAmB,IAAA,OAAO,EAAER,OAA5B;AAAqC,IAAA,OAAO,EAAED,OAA9C;AAAuD,IAAA,KAAK,EAAC,MAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAEL,CAxCD;;GAAMH,S;;MAAAA,S;AA0CN,eAAeA,SAAf","sourcesContent":["import React, { useRef, useState, useEffect } from 'react'\nimport dynamic from 'next/dynamic'\n\nconst QuillNoSSRWrapper = dynamic(import('react-quill'), {\n  ssr: false,\n  loading: () => <p>Loading ...</p>\n})\n\nconst IndexPage = () => {\n  const [value, setValue] = useState('')\n\n  const formats = [\n  'header',\n  'font',\n  'size',\n  'bold',\n  'italic',\n  'underline',\n  'strike',\n  'blockquote',\n  'list',\n  'bullet',\n  'indent',\n  'link',\n  'image',\n  'video',\n]\nconst modules = {\n  toolbar: [\n    [{ header: '1' }, { header: '2' }, { font: [] }],\n    [{ size: [] }],\n    ['bold', 'italic', 'underline', 'strike', 'blockquote'],\n    [\n      { list: 'ordered' },\n      { list: 'bullet' },\n      { indent: '-1' },\n      { indent: '+1' },\n    ],\n    ['link', 'image', 'video'],\n    ['clean'],\n  ],\n  clipboard: {\n    // toggle to add extra line breaks when pasting HTML:\n    matchVisual: false,\n  },\n}\n      return <QuillNoSSRWrapper modules={modules} formats={formats} theme=\"snow\" />\n\n}\n\nexport default IndexPage\n"]},"metadata":{},"sourceType":"module"}