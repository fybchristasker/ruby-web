{"ast":null,"code":"var _jsxFileName = \"/Users/fangyongbin/Projects/ruby-web/pages/_document.js\",\n    _this = this;\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport Document, { Html, Head, Main, NextScript } from 'next/document';\nimport { ServerStyleSheets } from '@material-ui/core/styles';\nexport default class MyDocument extends Document {\n  render() {\n    return __jsx(Html, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 7\n      }\n    }, __jsx(Head, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }\n    }), __jsx(\"body\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }\n    }, __jsx(Main, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 11\n      }\n    }), __jsx(NextScript, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nMyDocument.getInitialProps = async function (ctx) {\n  const sheets = new ServerStyleSheets();\n  const originalRenderPage = ctx.renderPage;\n\n  ctx.renderPage = function () {\n    return originalRenderPage({\n      enhanceApp: function (App) {\n        return function (props) {\n          return sheets.collect(__jsx(App, _extends({}, props, {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 50\n            }\n          })));\n        };\n      }\n    });\n  };\n\n  const initialProps = await Document.getInitialProps(ctx);\n  return _objectSpread(_objectSpread({}, initialProps), {}, {\n    styles: [...React.Children.toArray(initialProps.styles), sheets.getStyleElement()]\n  });\n};","map":{"version":3,"sources":["/Users/fangyongbin/Projects/ruby-web/pages/_document.js"],"names":["React","Document","Html","Head","Main","NextScript","ServerStyleSheets","MyDocument","render","getInitialProps","ctx","sheets","originalRenderPage","renderPage","enhanceApp","App","props","collect","initialProps","styles","Children","toArray","getStyleElement"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,IAAmBC,IAAnB,EAAyBC,IAAzB,EAA+BC,IAA/B,EAAqCC,UAArC,QAAuD,eAAvD;AACA,SAASC,iBAAT,QAAkC,0BAAlC;AAEA,eAAe,MAAMC,UAAN,SAAyBN,QAAzB,CAAkC;AAC/CO,EAAAA,MAAM,GAAG;AACP,WACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAFF,CADF;AASD;;AAX8C;;AAcjDD,UAAU,CAACE,eAAX,GAA6B,gBAAMC,GAAN,EAAa;AACxC,QAAMC,MAAM,GAAG,IAAIL,iBAAJ,EAAf;AACA,QAAMM,kBAAkB,GAAGF,GAAG,CAACG,UAA/B;;AACAH,EAAAA,GAAG,CAACG,UAAJ,GAAiB;AAAA,WACfD,kBAAkB,CAAC;AACjBE,MAAAA,UAAU,EAAE,UAAAC,GAAG;AAAA,eAAI,UAAAC,KAAK;AAAA,iBAAIL,MAAM,CAACM,OAAP,CAAe,MAAC,GAAD,eAASD,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAf,CAAJ;AAAA,SAAT;AAAA;AADE,KAAD,CADH;AAAA,GAAjB;;AAIA,QAAME,YAAY,GAAG,MAAMjB,QAAQ,CAACQ,eAAT,CAAyBC,GAAzB,CAA3B;AACA,yCACKQ,YADL;AAEEC,IAAAA,MAAM,EAAE,CAAC,GAAGnB,KAAK,CAACoB,QAAN,CAAeC,OAAf,CAAuBH,YAAY,CAACC,MAApC,CAAJ,EAAiDR,MAAM,CAACW,eAAP,EAAjD;AAFV;AAID,CAZD","sourcesContent":["import React from 'react'\nimport Document, { Html, Head, Main, NextScript } from 'next/document'\nimport { ServerStyleSheets } from '@material-ui/core/styles'\n\nexport default class MyDocument extends Document {\n  render() {\n    return (\n      <Html>\n        <Head />\n        <body>\n          <Main />\n          <NextScript />\n        </body>\n      </Html>\n    )\n  }\n}\n\nMyDocument.getInitialProps = async ctx => {\n  const sheets = new ServerStyleSheets()\n  const originalRenderPage = ctx.renderPage\n  ctx.renderPage = () =>\n    originalRenderPage({\n      enhanceApp: App => props => sheets.collect(<App {...props} />)\n    })\n  const initialProps = await Document.getInitialProps(ctx)\n  return {\n    ...initialProps,\n    styles: [...React.Children.toArray(initialProps.styles), sheets.getStyleElement()]\n  }\n}\n"]},"metadata":{},"sourceType":"module"}