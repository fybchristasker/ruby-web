{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Component } from 'react';\nimport fetch from 'isomorphic-unfetch';\n\nvar SiteMap = /*#__PURE__*/function (_Component) {\n  _inherits(SiteMap, _Component);\n\n  var _super = _createSuper(SiteMap);\n\n  function SiteMap() {\n    _classCallCheck(this, SiteMap);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(SiteMap, null, [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n        var req, res, response, text;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                req = _ref.req, res = _ref.res;\n\n                if (!res) {\n                  _context.next = 11;\n                  break;\n                }\n\n                _context.next = 4;\n                return fetch(\"https://\".concat(req.headers.host, \"/api/sitemap\"));\n\n              case 4:\n                response = _context.sent;\n                _context.next = 7;\n                return response.text();\n\n              case 7:\n                text = _context.sent;\n                res.setHeader('Content-Type', 'text/xml');\n                res.write(text);\n                res.end();\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return SiteMap;\n}(Component);\n\nexport { SiteMap as default };","map":{"version":3,"sources":["/Users/fangyongbin/Projects/ruby-web/pages/sitemap.xml.js"],"names":["Component","fetch","SiteMap","req","res","headers","host","response","text","setHeader","write","end"],"mappings":";;;;;;;;;;;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;IAEqBC,O;;;;;;;;;;;;;;;;;;;;AACYC,gBAAAA,G,QAAAA,G,EAAKC,G,QAAAA,G;;qBAC9BA,G;;;;;;uBACqBH,KAAK,mBAAYE,GAAG,CAACE,OAAJ,CAAYC,IAAxB,kB;;;AAAtBC,gBAAAA,Q;;uBACaA,QAAQ,CAACC,IAAT,E;;;AAAbA,gBAAAA,I;AACNJ,gBAAAA,GAAG,CAACK,SAAJ,CAAc,cAAd,EAA8B,UAA9B;AACAL,gBAAAA,GAAG,CAACM,KAAJ,CAAUF,IAAV;AACAJ,gBAAAA,GAAG,CAACO,GAAJ;;;;;;;;;;;;;;;;;;;EAP+BX,S;;SAAhBE,O","sourcesContent":["import { Component } from 'react'\nimport fetch from 'isomorphic-unfetch'\n\nexport default class SiteMap extends Component {\n  static async getInitialProps({ req, res }) {\n    if (res) {\n      const response = await fetch(`https://${req.headers.host}/api/sitemap`)\n      const text = await response.text()\n      res.setHeader('Content-Type', 'text/xml')\n      res.write(text)\n      res.end()\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}